import tkinter as tk
from tkinter import messagebox, simpledialog

# Store contacts as list of dicts
contacts = []

def add_contact():
    name = simpledialog.askstring("Add Contact", "Enter name:")
    if not name:
        return
    phone = simpledialog.askstring("Add Contact", "Enter phone number:")
    email = simpledialog.askstring("Add Contact", "Enter email:")
    address = simpledialog.askstring("Add Contact", "Enter address:")
    contacts.append({"name": name, "phone": phone, "email": email, "address": address})
    refresh_contact_list()
    messagebox.showinfo("Success", f"Contact '{name}' added!")

def refresh_contact_list():
    contact_list.delete(0, tk.END)
    for i, c in enumerate(contacts):
        contact_list.insert(tk.END, f"{i+1}. {c['name']} - {c['phone']}")

def search_contact():
    term = simpledialog.askstring("Search", "Enter name or phone number to search:")
    if not term:
        return
    results = [c for c in contacts if term.lower() in c['name'].lower() or term in c['phone']]
    contact_list.delete(0, tk.END)
    if results:
        for i, c in enumerate(results):
            contact_list.insert(tk.END, f"{i+1}. {c['name']} - {c['phone']}")
    else:
        messagebox.showinfo("No results", "No matching contacts found.")

def view_contact_details():
    selected = contact_list.curselection()
    if not selected:
        messagebox.showwarning("No Selection", "Please select a contact to view details.")
        return
    index = selected[0]
    contact = contacts[index]
    info = (f"Name: {contact['name']}\n"
            f"Phone: {contact['phone']}\n"
            f"Email: {contact['email']}\n"
            f"Address: {contact['address']}")
    messagebox.showinfo("Contact Details", info)

def update_contact():
    selected = contact_list.curselection()
    if not selected:
        messagebox.showwarning("No Selection", "Please select a contact to update.")
        return
    index = selected[0]
    contact = contacts[index]

    name = simpledialog.askstring("Update Contact", "Enter name:", initialvalue=contact["name"])
    phone = simpledialog.askstring("Update Contact", "Enter phone number:", initialvalue=contact["phone"])
    email = simpledialog.askstring("Update Contact", "Enter email:", initialvalue=contact["email"])
    address = simpledialog.askstring("Update Contact", "Enter address:", initialvalue=contact["address"])

    if name and phone is not None:
        contacts[index] = {"name": name, "phone": phone, "email": email, "address": address}
        refresh_contact_list()
        messagebox.showinfo("Updated", "Contact updated successfully!")
    else:
        messagebox.showwarning("Invalid Input", "Name and phone number cannot be empty.")

def delete_contact():
    selected = contact_list.curselection()
    if not selected:
        messagebox.showwarning("No Selection", "Please select a contact to delete.")
        return
    index = selected[0]
    contact = contacts[index]
    confirm = messagebox.askyesno("Confirm Delete", f"Delete contact '{contact['name']}'?")
    if confirm:
        contacts.pop(index)
        refresh_contact_list()
        messagebox.showinfo("Deleted", "Contact deleted successfully!")

# --- GUI Setup ---
root = tk.Tk()
root.title("Contact Manager")
root.geometry("500x400")
root.resizable(False, False)

title = tk.Label(root, text="Contact Manager", font=("Arial", 18, "bold"))
title.pack(pady=10)

contact_list = tk.Listbox(root, width=60, height=12, font=("Arial", 12))
contact_list.pack(pady=10)

btn_frame = tk.Frame(root)
btn_frame.pack(pady=5)

tk.Button(btn_frame, text="Add Contact", width=12, command=add_contact).grid(row=0, column=0, padx=5, pady=5)
tk.Button(btn_frame, text="Search", width=12, command=search_contact).grid(row=0, column=1, padx=5, pady=5)
tk.Button(btn_frame, text="View Details", width=12, command=view_contact_details).grid(row=0, column=2, padx=5, pady=5)
tk.Button(btn_frame, text="Update Contact", width=12, command=update_contact).grid(row=1, column=0, padx=5, pady=5)
tk.Button(btn_frame, text="Delete Contact", width=12, command=delete_contact).grid(row=1, column=1, padx=5, pady=5)
tk.Button(btn_frame, text="Refresh List", width=12, command=refresh_contact_list).grid(row=1, column=2, padx=5, pady=5)

tk.Button(root, text="Exit", command=root.quit, bg="red", fg="white", font=("Arial", 12), width=15).pack(pady=15)

refresh_contact_list()
root.mainloop()
